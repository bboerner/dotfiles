# Source global definitions
if [ -f /etc/bashrc ]; then
    . /etc/bashrc

fi

#
# begin Dotfiles
# Inspired by: Zach Holman's Dotfiles Are Meant to Be Forked"
# (http://zachholman.com/2010/08/dotfiles-are-meant-to-be-forked/)
#

# shortcut to this dotfiles path is $BASHRC
export BASHRC=$HOME/.dotfiles

# your project folder that we can `c [tab]` to
export PROJECTS=~/play

# all of our bash files
config_files=($BASHRC/**/*.bash)
config_files_paths=($BASHRC/**/path.bash)
config_files_completions=($BASHRC/**/completion.bash)

# load the path files
for file in ${config_files_paths[@]} ; do
    #echo "Sourcing paths: $file"
    source $file
done

# load everything but the path and completion files
files=(${config_files[@]#*/path.bash})
for file in ${files[@]#*/completion.bash} ; do
    #echo "Sourcing anything but paths and completion: $file"
    source $file
done

# initialize autocomplete here, otherwise functions won't be loaded
#autoload -U compinit
#compinit

# load every completion after autocomplete loads
for file in ${config_files_completions[@]} ; do
    #echo "Sourcing completions: $file"
    source $file
done

unset config_files
unset config_files_paths
unset config_files_completions

#
# end Dotfiles
#


#
#
#

# use .bash_localrc for SUPER SECRET CRAP that you don't want in your
# public, versioned repo.
if [[ -a ~/.bash_localrc ]]
then
  source ~/.bash_localrc
fi


# From: http://unix.stackexchange.com/questions/177572/how-to-rename-terminal-tab-title-in-gnome-terminal/186167#186167
# function to set terminal title
function set_title(){
  if [[ -z "$ORIG" ]]; then
    ORIG=$PS1
  fi
  TITLE="\[\e]2;$*\a\]"
  PS1=${ORIG}${TITLE}
}

function echo_i() {
    while (($#)); do
	echo -n $1 "";
	shift;
    done
    echo ""
}


#
# 'pack' lists. Removes e.g. '::'
#

export PATH=$(packlist PATH)
# why man wants ":" at end of list I have no idea but 'man lstat'
# won't work w/o it.
export MANPATH=$(packlist MANPATH):
export INFOPATH=$(packlist INFOPATH)
export LD_LIBRARY_PATH=$(packlist LD_LIBRARY_PATH)

. ~/.keychain/$HOSTNAME-sh

# dedupe the PATH
if $(which dedupepath.py 2>&1 > /dev/null) ; then
    $(dedupepath.py PATH)
fi
